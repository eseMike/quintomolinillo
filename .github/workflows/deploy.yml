name: Deploy to VPS (quintomolinillo)

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      debug:
        description: "Enable SSH verbose debug"
        required: false
        default: "false"

concurrency:
  group: deploy-quintomolinillo
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare SSH key
        run: |
          set -euo pipefail
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          # Prefer Base64 secret to avoid formatting issues; fallback to raw secret
          if [ -n "${{ secrets.SSH_PRIVATE_KEY_B64 }}" ]; then
            echo "${{ secrets.SSH_PRIVATE_KEY_B64 }}" | base64 -d > ~/.ssh/id_ed25519 || echo "${{ secrets.SSH_PRIVATE_KEY_B64 }}" | base64 --decode > ~/.ssh/id_ed25519
          else
            printf "%s\n" "${{ secrets.SSH_PRIVATE_KEY }}" | tr -d '\r' > ~/.ssh/id_ed25519
          fi
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -p "${{ secrets.SSH_PORT }}" "${{ secrets.SSH_HOST }}" >> ~/.ssh/known_hosts 2>/dev/null || true

      - name: Show key fingerprint
        run: |
          ssh-keygen -y -f ~/.ssh/id_ed25519 > ~/.ssh/id_ed25519.pub
          echo "Runner key fingerprint:" && ssh-keygen -lf ~/.ssh/id_ed25519.pub || true

      - name: Debug SSH (one attempt, verbose)
        if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.debug == 'true' }}
        run: |
          set -x
          unset SSH_AUTH_SOCK || true
          ssh -vvv -i ~/.ssh/id_ed25519 -p "${{ secrets.SSH_PORT }}" \
            -o IdentitiesOnly=yes -o IdentityAgent=none \
            -o PreferredAuthentications=publickey \
            -o PubkeyAuthentication=yes -o PasswordAuthentication=no -o KbdInteractiveAuthentication=no \
            -o StrictHostKeyChecking=yes \
            "${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}" "echo SSH_OK"

      - name: Deploy via rsync
        run: |
          set -euo pipefail
          unset SSH_AUTH_SOCK || true
          RSYNC_SSH='ssh -i ~/.ssh/id_ed25519 -p "${{ secrets.SSH_PORT }}" -o IdentitiesOnly=yes -o IdentityAgent=none -o PreferredAuthentications=publickey -o PubkeyAuthentication=yes -o PasswordAuthentication=no -o KbdInteractiveAuthentication=no -o StrictHostKeyChecking=yes'
          rsync -avr \
            --exclude ".git/" \
            --exclude ".github/" \
            --exclude ".DS_Store" \
            --chmod=Du=rwx,Dgo=rx,Fu=rw,Fgo=r \
            ./ "${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:${{ secrets.SSH_TARGET }}/" \
            -e "$RSYNC_SSH"

      - name: Post-deploy (permissions sweep)
        if: always()
        run: |
          unset SSH_AUTH_SOCK || true
          ssh -i ~/.ssh/id_ed25519 -p "${{ secrets.SSH_PORT }}" \
            -o IdentitiesOnly=yes -o IdentityAgent=none \
            -o PreferredAuthentications=publickey -o PubkeyAuthentication=yes -o PasswordAuthentication=no -o KbdInteractiveAuthentication=no \
            -o StrictHostKeyChecking=yes \
            "${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}" \
            "find '${{ secrets.SSH_TARGET }}' -type d -exec chmod 755 {} \; && find '${{ secrets.SSH_TARGET }}' -type f -exec chmod 644 {} \;"

      - name: Upload SSH dir on failure (optional)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: ssh-debug
          path: ~/.ssh